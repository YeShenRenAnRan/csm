name: Tauri Android

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    if: ${{ github.ref == 'refs/heads/dev' }}
    name: Debug Build As Check
    runs-on: ubuntu-latest
    steps:
      - name: Install Deps
        run: |
          sudo apt-get install -yqq npm nodejs lua5.4
          sudo npm install -g pnpm
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: crusty-pie/toolchain@v1
        with:
            toolchain: nightly
            override: true
      - name: Debug Build As Check
        run: |
          pnpm install
          pnpm tauri icon ./src/lib/icons/cxsign.svg
          ./build.lua --no-bundle
  build:
    name: Release Build
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Deps
        run: |
          sudo apt-get install -yqq npm nodejs lua5.4
          sudo npm install -g pnpm
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Prepare JKS File
        run: |
          mkdir -p ${{ github.workspace }}/src-tauri/gen/android
          echo "storePassword=${{ secrets.S_PWD }}" > ${{ github.workspace }}/src-tauri/gen/android/key.properties
          echo "keyPassword=${{ secrets.K_PWD }}" >> ${{ github.workspace }}/src-tauri/gen/android/key.properties
          echo "keyAlias=${{ secrets.K_ALIAS }}" >> ${{ github.workspace }}/src-tauri/gen/android/key.properties
          mkdir -p ${{ github.workspace }}/store-files
          echo ${{ secrets.JKS_FILE }} | base64 -d > ${{ github.workspace }}/store-files/tmp.jks
          echo "storeFile=${{ github.workspace }}/store-files/tmp.jks" >> ${{ github.workspace }}/src-tauri/gen/android/key.properties
      - name: Run Tauri Build
        run: |
          pnpm install
          pnpm tauri icon ./src/lib/icons/cxsign.svg
          ./build.lua android --release --split-per-abi
          mkdir -p ${{ github.workspace }}/artifact
          cp -r ${{ github.workspace }}/src-tauri/gen/android/app/build/outputs/* ${{ github.workspace }}/artifact
      - name: Upload Apk Artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-all'
          path: '${{ github.workspace }}/artifact/apk/*/*.apk'
      - name: Upload Aab artifact
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-all'
          path: '${{ github.workspace }}/tmp/artifact/bundle/*/*.aab'
