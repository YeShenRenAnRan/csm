name: Tauri Android

on:
  push:
    branches: [ "main","dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    if: ${{ github.ref == 'refs/heads/dev' }}
    name: Debug Build As Check
    runs-on: ubuntu-latest
    steps:
      - name: Install Build Utils
        run: |
          sudo apt-get install -yqq build-essential npm nodejs lua5.4 curl wget file
          sudo npm install -g pnpm
      - name: Install Build Dependencies
        run: |
          sudo apt-get install -yqq libwebkit2gtk-4.1-dev libgtk-3-dev
          sudo apt-get install javascript-common libsoup-3.0-dev
          sudo apt-get install libxdo-dev libssl-dev
          sudo apt-get install libayatana-appindicator3-dev librsvg2-dev
      - uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: nightly
          override: true
      - name: Debug Build As Check
        run: |
          pnpm install
          pnpm tauri icon ./src/lib/icons/cxsign.svg
          ./build.lua --no-bundle
      - name: Run Cargo Check
        run: |
          cd ${{ github.workspace }}/src-tauri
          cargo check
      - name: Run Cargo Clippy
        run: |
          cd ${{ github.workspace }}/src-tauri
          cargo clippy
          
  build:
    if: ${{ github.ref == 'refs/heads/main' }}
    name: Release Build
    runs-on: ubuntu-latest
    steps:
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Install Build Utils
        run: |
          sudo apt-get install -yqq npm nodejs lua5.4
          sudo npm install -g pnpm
      - name: Setup NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r26d
      - uses: actions/checkout@v2
      - name: Install Rust Toolchain
        uses: crusty-pie/toolchain@v1
        with:
          toolchain: nightly
          # 注意：Tauri 在 mobile build 时会自行添加 Android targets，但这里保留以确保环境完整性
          targets: aarch64-linux-android, armv7-linux-androideabi, i686-linux-android, x86_64-linux-android
          override: true
      - name: Prepare JKS File
        run: |
          # Tauri 2.0+ 推荐将 key.properties 放在 src-tauri/gen/android/ 或 tauri.conf.json 中配置
          mkdir -p ${{ github.workspace }}/src-tauri/gen/android
          echo "storePassword=${{ secrets.S_PWD }}" > ${{ github.workspace }}/src-tauri/gen/android/key.properties
          echo "keyPassword=${{ secrets.K_PWD }}" >> ${{ github.workspace }}/src-tauri/gen/android/key.properties
          echo "keyAlias=${{ secrets.K_ALIAS }}" >> ${{ github.workspace }}/src-tauri/gen/android/key.properties
          mkdir -p ${{ github.workspace }}/store-files
          echo ${{ secrets.JKS_FILE }} | base64 -d > ${{ github.workspace }}/store-files/tmp.jks
          echo "storeFile=${{ github.workspace }}/store-files/tmp.jks" >> ${{ github.workspace }}/src-tauri/gen/android/key.properties
          
      - name: Run Tauri Build
        env:
          NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
          # 确保 tauri.conf.json 配置正确，NDK_HOME 环境变量可能被 tauri cli 自动检测
        run: |
          pnpm install
          pnpm tauri icon ${{ github.workspace }}/src/lib/icons/cxsign.svg
          # 这条命令会生成所有 ABI 的 APK/AAB 文件
          ./build.lua android --release --split-per-abi
          
      # --- 移除错误的 Copy Artifact 步骤 ---
      # 原始的 cp -r 步骤已移除
      
      # ------------------------------------
      # --- 直接从 Tauri 的 target/release/bundle 目录上传产物 ---
      # ------------------------------------
      - name: Upload Artifact (aarch64-apk)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-aarch64-apk'
          # 路径修正为 Tauri 默认的 target/release/bundle/ 结构
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/apk/arm64/release/app-*-release.apk'
          
      - name: Upload Artifact (armv7-apk)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-armv7-apk'
          # 路径修正
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/apk/arm/release/app-*-release.apk'
          
      - name: Upload Artifact (i686-apk)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-i686-apk'
          # 路径修正
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/apk/x86/release/app-*-release.apk'
          
      - name: Upload Artifact (amd64-apk)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-amd64-apk'
          # 路径修正
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/apk/x86_64/release/app-*-release.apk'
          
      - name: Upload Artifact (aarch64-aab)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-aarch64-aab'
          # 路径修正
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/aab/arm64Release/app-*-release.aab'
          
      - name: Upload Artifact (armv7-aab)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-armv7-aab'
          # 路径修正
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/aab/armRelease/app-*-release.aab'
          
      - name: Upload Artifact (i686-aab)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-i686-aab'
          # 路径修正
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/aab/x86Release/app-*-release.aab'
          
      - name: Upload Artifact (amd64-aab)
        uses: actions/upload-artifact@v4
        with:
          name: 'android-build-amd64-aab'
          # 路径修正
          path: '${{ github.workspace }}/src-tauri/target/release/bundle/aab/x86_64Release/app-*-release.aab'
